
#user  nobody;
#Defines which Linux system user will own and run the Nginx server

worker_processes  1;
#Referes to single threaded process. Generally set to be equal to the number of CPUs or cores.

#error_log  logs/error.log; #error_log  logs/error.log  notice;
#Specifies the file where server logs. 

#pid        logs/nginx.pid;
#nginx will write its master process ID(PID).

events {
	worker_connections  1024;
	# worker_processes and worker_connections allows you to calculate maxclients value: 
	# max_clients = worker_processes * worker_connections
}


http {
	include       mime.types;
	# anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block

	default_type  application/octet-stream;
	#

	#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	#                  '$status $body_bytes_sent "$http_referer" '
	#                  '"$http_user_agent" "$http_x_forwarded_for"';

	#access_log  logs/access.log  main;

	sendfile        on;
	# If serving locally stored static files, sendfile is essential to speed up the server,
	# But if using as reverse proxy one can deactivate it

	#tcp_nopush     on;
	# works opposite to tcp_nodelay. Instead of optimizing delays, it optimizes the amount of data sent at once.

	#keepalive_timeout  0;
	keepalive_timeout  65;
	# timeout during which a keep-alive client connection will stay open.

	#gzip  on;
	# tells the server to use on-the-fly gzip compression.

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
	server {
		listen 80 default_server;
		listen [::]:80 default_server;

		# SSL configuration
		#
		# listen 443 ssl default_server;
		# listen [::]:443 ssl default_server;
		#
		# Note: You should disable gzip for SSL traffic.
		# See: https://bugs.debian.org/773332
		#
		# Read up on ssl_ciphers to ensure a secure configuration.
		# See: https://bugs.debian.org/765782
		#
		# Self signed certs generated by the ssl-cert package
		# Don't use them in a production server!
		#
		# include snippets/snakeoil.conf;

		root /var/www/html;

		# Add index.php to the list if you are using PHP
		index index.html index.htm index.nginx-debian.html;

		server_name _;

		location / {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-NginX-Proxy true;
			proxy_pass http://localhost:5001/;
			proxy_set_header Host $http_host;
			proxy_cache_bypass $http_upgrade;
			proxy_redirect off;
			proxy_buffering off;
                        proxy_http_version 1.1;
                        proxy_set_header   "Connection" "";
                        chunked_transfer_encoding off;
		}

		# pass PHP scripts to FastCGI server
		#
		#location ~ \.php$ {
			#	include snippets/fastcgi-php.conf;
			#
			#	# With php-fpm (or other unix sockets):
			#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
			#	# With php-cgi (or other tcp sockets):
			#	fastcgi_pass 127.0.0.1:9000;
			#}

		# deny access to .htaccess files, if Apache's document root
		# concurs with nginx's one
		#
		#location ~ /\.ht {
			#	deny all;
			#}
	}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

	# another virtual host using mix of IP-, name-, and port-based configuration
	#
	#server {
		#    listen       8000;
		#    listen       somename:8080;
		#    server_name  somename  alias  another.alias;

		#    location / {
			#        root   html;
			#        index  index.html index.htm;
			#    }
		#}


	# HTTPS server
	#
	#server {
		#    listen       443 ssl;
		#    server_name  localhost;

		#    ssl_certificate      cert.pem;
		#    ssl_certificate_key  cert.key;

		#    ssl_session_cache    shared:SSL:1m;
		#    ssl_session_timeout  5m;

		#    ssl_ciphers  HIGH:!aNULL:!MD5;
		#    ssl_prefer_server_ciphers  on;

		#    location / {
			#        root   html;
			#        index  index.html index.htm;
			#    }
		#}

}
